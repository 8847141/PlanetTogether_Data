diff --git a/Stored Procedures/Scheduling.EmailAlertMissingMaterialDemand.sql b/Stored Procedures/Scheduling.EmailAlertMissingMaterialDemand.sql
deleted file mode 100644
index 66c52bc..0000000
--- a/Stored Procedures/Scheduling.EmailAlertMissingMaterialDemand.sql
+++ /dev/null
@@ -1,62 +0,0 @@
-SET QUOTED_IDENTIFIER ON
-GO
-SET ANSI_NULLS ON
-GO
-/*
-Author:		Bryan Eddy
-Date:		5/25/2018
-Desc:		Email alert to show missing material demand due to material not referencing correct op sequence
-Version:	1
-Update:		n/a
-*/
-
-CREATE PROCEDURE [Scheduling].[EmailAlertMissingMaterialDemand]
-AS
-BEGIN
-	DECLARE @html nvarchar(MAX),
-	@SubjectLine NVARCHAR(1000),
-	@ReceipientList NVARCHAR(1000),
-	@RowCount INT,
-	@qry NVARCHAR(MAX),
-	@body1 VARCHAR(MAX)
-
-		SET @ReceipientList = (STUFF((SELECT ';' + UserEmail 
-							FROM [NAASPB-PRD04\SQL2014].Premise.dbo.tblConfiguratorUser G  INNER JOIN [NAASPB-PRD04\SQL2014].Premise.users.UserResponsibility  K ON  G.UserID = K.UserID
-	  						WHERE K.ResponsibilityID = 21 FOR XML PATH('')),1,1,''))
-
-	SET @qry = 'SELECT item_number,
-       comp_item,
-       item_seq,
-       Bom_Op_Seq,
-       Route_Op_Seq,
-       inventory_item_status_code,
-       wip_entity_name
-		FROM [Scheduling].[vMissingMaterialDemand]'
-
-	EXEC sp_executesql @qry
-	IF @@ROWCOUNT > 0 
-		BEGIN
-
-		SET @body1 = N'<H1>Missing Material Demand Report</H1>' +
-				N'<H2 span style=''font-size:16.0pt;font-family:"Calibri","sans-serif";color:#EB3814''>Materials are not assigned to an operation passing into the APS system.</H2>' 
-	
-
-			SET @SubjectLine = 'Missing Material Demand' + CAST(GETDATE() AS NVARCHAR(50))
-			EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
-			@query =@qry, @orderBy = N'ORDER BY item_number'
-
-			SET @html = @body1 + @html
-
-			EXEC msdb.dbo.sp_send_dbmail 
-			@recipients=@ReceipientList,
-			--@recipients = 'bryan.eddy@aflglobal.com',
-			@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
-			@subject = @SubjectLine,
-			@body = @html,
-			@body_format = 'HTML',
-			@query_no_truncate = 1,
-			@attach_query_result_as_file = 0;
-		END
-END
-
-GO
diff --git a/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemand.sql b/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemand.sql
new file mode 100644
index 0000000..1dcfa6e
--- /dev/null
+++ b/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemand.sql
@@ -0,0 +1,61 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+/*
+Author:		Bryan Eddy
+Date:		5/25/2018
+Desc:		Email alert to show missing material demand due to material not referencing correct op sequence
+Version:	1
+Update:		n/a
+*/
+
+CREATE PROCEDURE [Scheduling].[usp_EmailAlertMissingMaterialDemand]
+AS
+BEGIN
+	DECLARE @html nvarchar(MAX),
+	@SubjectLine NVARCHAR(1000),
+	@ReceipientList NVARCHAR(1000),
+	@RowCount INT,
+	@qry NVARCHAR(MAX),
+	@body1 VARCHAR(MAX)
+
+		SET @ReceipientList = (STUFF((SELECT ';' + UserEmail 
+							FROM [NAASPB-PRD04\SQL2014].Premise.dbo.tblConfiguratorUser G  INNER JOIN [NAASPB-PRD04\SQL2014].Premise.users.UserResponsibility  K ON  G.UserID = K.UserID
+	  						WHERE K.ResponsibilityID = 21 FOR XML PATH('')),1,1,''))
+
+	SET @qry = 'SELECT item_number,
+       comp_item,
+       item_seq,
+       Bom_Op_Seq,
+       Route_Op_Seq,
+       inventory_item_status_code
+		FROM [Scheduling].[vMissingMaterialDemand]'
+
+	EXEC sp_executesql @qry
+	IF @@ROWCOUNT > 0 
+		BEGIN
+
+		SET @body1 = N'<H1>Missing Material Demand Report</H1>' +
+				N'<H2 span style=''font-size:16.0pt;font-family:"Calibri","sans-serif";color:#EB3814''>Materials are not assigned to an operation passing into the APS system.</H2>' 
+	
+
+			SET @SubjectLine = 'Missing Material Demand ' + CAST(GETDATE() AS NVARCHAR(50))
+			EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
+			@query =@qry, @orderBy = N'ORDER BY item_number'
+
+			SET @html = @body1 + @html
+
+			EXEC msdb.dbo.sp_send_dbmail 
+			@recipients=@ReceipientList,
+			--@recipients = 'bryan.eddy@aflglobal.com',
+			@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
+			@subject = @SubjectLine,
+			@body = @html,
+			@body_format = 'HTML',
+			@query_no_truncate = 1,
+			@attach_query_result_as_file = 0;
+		END
+END
+
+GO
diff --git a/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemandDj.sql b/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemandDj.sql
new file mode 100644
index 0000000..65983d8
--- /dev/null
+++ b/Stored Procedures/Scheduling.usp_EmailAlertMissingMaterialDemandDj.sql
@@ -0,0 +1,61 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+/*
+Author:		Bryan Eddy
+Date:		5/25/2018
+Desc:		Email alert to show missing material demand due to material not referencing correct op sequence
+Version:	1
+Update:		n/a
+*/
+
+CREATE PROCEDURE [Scheduling].[usp_EmailAlertMissingMaterialDemandDj]
+AS
+BEGIN
+	DECLARE @html nvarchar(MAX),
+	@SubjectLine NVARCHAR(1000),
+	@ReceipientList NVARCHAR(1000),
+	@RowCount INT,
+	@qry NVARCHAR(MAX),
+	@body1 VARCHAR(MAX)
+
+		SET @ReceipientList = (STUFF((SELECT ';' + UserEmail 
+							FROM [NAASPB-PRD04\SQL2014].Premise.dbo.tblConfiguratorUser G  INNER JOIN [NAASPB-PRD04\SQL2014].Premise.users.UserResponsibility  K ON  G.UserID = K.UserID
+	  						WHERE K.ResponsibilityID = 21 FOR XML PATH('')),1,1,''))
+
+	SET @qry = 'SELECT item_number,
+       component_item,
+       Bom_Op_Seq,
+       Route_Op_Seq,
+       inventory_item_status_code,
+       wip_entity_name
+		FROM [Scheduling].[vMissingMaterialDemandDj]'
+
+	EXEC sp_executesql @qry
+	IF @@ROWCOUNT > 0 
+		BEGIN
+
+		SET @body1 = N'<H1>Missing Material DJ Demand Report</H1>' +
+				N'<H2 span style=''font-size:16.0pt;font-family:"Calibri","sans-serif";color:#EB3814''>DJ Materials are not assigned to an operation passing into the APS system.</H2>' 
+	
+
+			SET @SubjectLine = 'Missing Material Demand ' + CAST(GETDATE() AS NVARCHAR(50))
+			EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
+			@query =@qry, @orderBy = N'ORDER BY item_number'
+
+			SET @html = @body1 + @html
+
+			EXEC msdb.dbo.sp_send_dbmail 
+			@recipients=@ReceipientList,
+			--@recipients = 'bryan.eddy@aflglobal.com',
+			@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
+			@subject = @SubjectLine,
+			@body = @html,
+			@body_format = 'HTML',
+			@query_no_truncate = 1,
+			@attach_query_result_as_file = 0;
+		END
+END
+
+GO
diff --git a/Stored Procedures/Scheduling.usp_EmailMasterAlert.sql b/Stored Procedures/Scheduling.usp_EmailMasterAlert.sql
index 9da17c8..8d9d33d 100644
--- a/Stored Procedures/Scheduling.usp_EmailMasterAlert.sql
+++ b/Stored Procedures/Scheduling.usp_EmailMasterAlert.sql
@@ -22,7 +22,11 @@
 
 	EXEC Scheduling.usp_EmailSchedulingMissingLineSpeed
 
-	EXEC Scheduling.EmailAlertMissingMaterialDemand
+	EXEC Scheduling.usp_EmailAlertMissingMaterialDemand
+
+	EXEC [Scheduling].[usp_EmailAlertMissingMaterialDemandDj]
+
+	EXEC Scheduling.usp_EmailOrdersStaleMaterials
 
 END
 GO
diff --git a/Stored Procedures/Scheduling.usp_EmailMfgHoldAlert.sql b/Stored Procedures/Scheduling.usp_EmailMfgHoldAlert.sql
index 083942e..3ee8936 100644
--- a/Stored Procedures/Scheduling.usp_EmailMfgHoldAlert.sql
+++ b/Stored Procedures/Scheduling.usp_EmailMfgHoldAlert.sql
@@ -16,29 +16,39 @@
 BEGIN
 	DECLARE @html nvarchar(MAX),
 	@SubjectLine NVARCHAR(1000),
-	@ReceipientList NVARCHAR(1000)
+	@ReceipientList NVARCHAR(1000),
+	@qry NVARCHAR(MAX)
 
 		SET @ReceipientList = (STUFF((SELECT ';' + UserEmail 
 							FROM [NAASPB-PRD04\SQL2014].Premise.dbo.tblConfiguratorUser G  INNER JOIN [NAASPB-PRD04\SQL2014].Premise.users.UserResponsibility  K ON  G.UserID = K.UserID
 	  						WHERE K.ResponsibilityID = 19 FOR XML PATH('')),1,1,''))
 
 
-
-	SET @SubjectLine = 'MFG Hold Alert ' + CAST(GETDATE() AS NVARCHAR(50))
-	EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
-	@query = N'SELECT order_number, conc_order_number, CAST(promise_date as DATE) promise_date, CAST(need_by_date AS DATE) need_by_date, has_mfg_hold, assembly_item, 
-	customer_name, scheduler, CAST(pri_uom_order_qty AS INT) pri_uom_order_qty FROM Scheduling.vAlertMfgHold', @orderBy = N'ORDER BY order_number';
+	SET @qry = N'SELECT order_number, conc_order_number, CAST(promise_date as DATE) promise_date, CAST(need_by_date AS DATE) need_by_date, has_mfg_hold, assembly_item, 
+	customer_name, scheduler, CAST(pri_uom_order_qty AS INT) pri_uom_order_qty FROM Scheduling.vAlertMfgHold'
 
 
-					EXEC msdb.dbo.sp_send_dbmail 
-					@recipients=@ReceipientList,
-					--@recipients = 'bryan.eddy@aflglobal.com',
-					--@blind_copy_recipients =  @BlindRecipientlist, --@ReceipientList
-					@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
-					@subject = @SubjectLine,
-					@body = @html,
-					@body_format = 'HTML',
-					@query_no_truncate = 1,
-					@attach_query_result_as_file = 0;
+	EXEC sp_executesql @qry
+	IF @@ROWCOUNT > 0 
+	BEGIN
+
+		SET @SubjectLine = 'MFG Hold Alert ' + CAST(GETDATE() AS NVARCHAR(50))
+		EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
+		@query = @qry, @orderBy = N'ORDER BY order_number';
+
+
+
+
+						EXEC msdb.dbo.sp_send_dbmail 
+						@recipients=@ReceipientList,
+						--@recipients = 'bryan.eddy@aflglobal.com',
+						--@blind_copy_recipients =  @BlindRecipientlist, --@ReceipientList
+						@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
+						@subject = @SubjectLine,
+						@body = @html,
+						@body_format = 'HTML',
+						@query_no_truncate = 1,
+						@attach_query_result_as_file = 0;
+	END
 END
 GO
diff --git a/Stored Procedures/Scheduling.usp_EmailOrdersStaleMaterials.sql b/Stored Procedures/Scheduling.usp_EmailOrdersStaleMaterials.sql
index 16a7ba3..eb01c17 100644
--- a/Stored Procedures/Scheduling.usp_EmailOrdersStaleMaterials.sql
+++ b/Stored Procedures/Scheduling.usp_EmailOrdersStaleMaterials.sql
@@ -2,35 +2,75 @@
 GO
 SET ANSI_NULLS ON
 GO
+
 /*
 Author:		Bryan Eddy
 Date:		4/4/2018
 Desc:		Alert of materials that haven't been orderd in more than 9 months
-Version:	1
-Update:		n/a
-
+Version:	2
+Update:		Changed the view to pull stale materials data to a flattened data set
 */
 
 CREATE PROCEDURE [Scheduling].[usp_EmailOrdersStaleMaterials]
 AS
 BEGIN
 	DECLARE @html nvarchar(MAX),
-	@SubjectLine NVARCHAR(1000)
+	@SubjectLine NVARCHAR(1000),
+	@ReceipientList NVARCHAR(1000),
+	@RowCount INT,
+	@qry NVARCHAR(MAX),
+	@body1 VARCHAR(MAX),
+	@html2 NVARCHAR(MAX);
 
-	SET @SubjectLine = 'Orders with Stale Materials ' + CAST(GETDATE() AS NVARCHAR(50))
-	EXEC Scheduling.usp_QueryToHtmlTable @html = @html OUTPUT,  
-	@query = N'SELECT * FROM Scheduling.vOrdersWithMaterialsNotOrderedInNineMonths', @orderBy = N'ORDER BY order_number';
+		--Get list of users to email
+		SET @ReceipientList = (STUFF((SELECT ';' + UserEmail 
+							FROM [NAASPB-PRD04\SQL2014].Premise.dbo.tblConfiguratorUser G  INNER JOIN [NAASPB-PRD04\SQL2014].Premise.users.UserResponsibility  K ON  G.UserID = K.UserID
+	  						WHERE K.ResponsibilityID = 22 FOR XML PATH('')),1,1,''))
 
+	--Get count of records to ensure alert should fire off
+	SET @qry = 'SELECT count(*) FROM Scheduling.vStaleMaterials'
 
-					EXEC msdb.dbo.sp_send_dbmail 
-					@recipients='Jeff.Gilfillan@aflglobal.com; Rich.DiDonato@aflglobal.com',
-					--@recipients = 'bryan.eddy@aflglobal.com',
-					--@blind_copy_recipients =  @BlindRecipientlist, --@ReceipientList
-					@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
-					@subject = @SubjectLine,
-					@body = @html,
-					@body_format = 'HTML',
-					@query_no_truncate = 1,
-					@attach_query_result_as_file = 0;
+	EXEC sp_executesql @qry
+	IF @@ROWCOUNT > 0 
+		BEGIN
+
+		SET @body1 = N'<H1>Stale Materials Report</H1>' +
+				N'<H2 span style=''font-size:16.0pt;font-family:"Calibri","sans-serif";color:#EB3814''>Materials not purchased in the past 9 months, Booked / Not Schedule Approved.</H2>' 
+	
+			SET @SubjectLine = 'Stale Materials Report ' + CAST(GETDATE() AS NVARCHAR(50))
+
+			--Get flattened material demand grouped by finished good
+			EXEC Scheduling.usp_QueryToHtmlTable @query = N'SELECT FinishedGood,
+								Materials,
+								Orders
+								FROM Scheduling.vStaleMaterialsFlat',   
+                            @orderBy = N'FinishedGood',     
+                            @html = @html OUTPUT 
+
+			--Get flattened material demand data grouped by Material and buyer
+			EXEC Scheduling.usp_QueryToHtmlTable @query = N'SELECT Material,Buyer,
+								FinishedGood,
+								Orders
+								FROM Scheduling.vStaleMaterialsFlatByBuyer',        
+                            @orderBy = N'Buyer',     
+                            @html = @html2 OUTPUT 
+
+							PRINT @html2
+SET @html =  @html + '<H1>Stale Materials Report Grouped By Material/Buyer</H1><div></div><div>' +  @html2 + '</div>'
+
+			SET @html = @body1 + @html
+
+			EXEC msdb.dbo.sp_send_dbmail 
+			--@recipients=@ReceipientList,
+			@recipients = 'bryan.eddy@aflglobal.com',
+			@blind_copy_recipients = 'bryan.eddy@aflglobal.com',
+			@subject = @SubjectLine,
+			@body = @html,
+			@body_format = 'HTML',
+			@query_no_truncate = 1,
+			@attach_query_result_as_file = 0;
+		END
 END
+
+
 GO
diff --git a/Stored Procedures/Setup.GetItemSetupAttributes.sql b/Stored Procedures/Setup.GetItemSetupAttributes.sql
index b2c7a5e..7414b2b 100644
--- a/Stored Procedures/Setup.GetItemSetupAttributes.sql
+++ b/Stored Procedures/Setup.GetItemSetupAttributes.sql
@@ -2,8 +2,6 @@
 GO
 SET ANSI_NULLS ON
 GO
-
-
 /*
 Author:		Bryan Eddy
 Date:		3/27/2018
@@ -12,7 +10,7 @@
 Update:		n/a
 */
 
-CREATE PROCEDURE [Setup].[GetItemSetupAttributes]
+CREATE PROC [Setup].[GetItemSetupAttributes]
 
 as
 
@@ -60,7 +58,7 @@
 				DROP TABLE #OD;
 				SELECT DISTINCT Setup, AttributeNameID,AttributeName,SetupAttributeValue AS OD, MachineID
 				INTO #OD
-				FROM Setup.vSetupTimesItem WHERE AttributeNameID = 3
+				FROM Setup.vSetupTimesItem WHERE AttributeNameID = 3 AND ISNUMERIC(SetupAttributeValue) = 1
 
 				--Get Jacket Material for each setup
 				IF OBJECT_ID(N'tempdb..#JacketMaterial', N'U') IS NOT NULL
diff --git a/Stored Procedures/Setup.usp_CalculateSetupTimesFromOracle.sql b/Stored Procedures/Setup.usp_CalculateSetupTimesFromOracle.sql
index ebe807c..e259271 100644
--- a/Stored Procedures/Setup.usp_CalculateSetupTimesFromOracle.sql
+++ b/Stored Procedures/Setup.usp_CalculateSetupTimesFromOracle.sql
@@ -7,6 +7,7 @@
 
 
 
+
 -- =============================================
 -- Author:      Bryan Eddy
 -- Create date: 8/14/2017
@@ -244,13 +245,13 @@
 		
 		BEGIN TRAN
 			INSERT INTO [Setup].AttributeSetupTimeItem (Item_Number,[Setup],[MachineGroupID],MachineID,AttributeNameID,[SetupAttributeValue],[SetupTime])
-			SELECT DISTINCT Item_Number,G.true_operation_code,I.[MachineGroupID],I.MachineID,8 AttributeNameID,null,FiberCount * TimeValue		--Calculates the TimeValue per fibercount and then inserts it for FiberSet for PT to pick up
+  			SELECT DISTINCT Item_Number,G.true_operation_code,I.[MachineGroupID],I.MachineID,8 AttributeNameID,K.FiberCount,K.FiberCount * TimeValue--, K.FiberCount, U.TimeValue, I.MachineName		--Calculates the TimeValue per fibercount and then inserts it for FiberSet for PT to pick up
 			FROM Setup.ItemAttributes K INNER JOIN dbo.Oracle_Routes G ON G.item_number = K.ItemNumber 
 			INNER JOIN #MachineCapability P ON P.Setup = G.true_operation_code
-			INNER JOIN Setup.AttributeMatrixVariableValue U ON U.AttributeValue = K.FiberCount AND P.MachineID = U.MachineID
+			INNER JOIN Setup.AttributeMatrixFixedValue U ON  P.MachineID = U.MachineID
 			INNER JOIN Setup.MachineGroupAttributes Y ON Y.AttributeNameID = U.AttributeNameID 
 			INNER JOIN Setup.MachineNames I ON I.MachineGroupID = Y.MachineGroupID AND U.MachineID = I.MachineID
-			WHERE ValueTypeID = 4 
+			WHERE ValueTypeID = 3 AND U.AttributeNameID = 7 AND I.MachineGroupID = 2
 		COMMIT TRAN
 	END TRY
 	BEGIN CATCH	
diff --git a/Stored Procedures/Setup.usp_GetItemAttributeData.sql b/Stored Procedures/Setup.usp_GetItemAttributeData.sql
index 3f71d9b..081d428 100644
--- a/Stored Procedures/Setup.usp_GetItemAttributeData.sql
+++ b/Stored Procedures/Setup.usp_GetItemAttributeData.sql
@@ -15,8 +15,8 @@
 -- Author:      Bryan Eddy
 -- Create date: 9/11/2017
 -- Description: Procedure insert data into Setup.ItemAttributes table for Oracle to pick up
--- Version: 2
--- Update:	Added update statement to identify if a binder exists in the Bom for the item.
+-- Version: 3
+-- Update:	Added condition to OD update statment to ensure the value is numeric
 -- =============================================
 
 CREATE PROCEDURE [Setup].[usp_GetItemAttributeData]
@@ -117,7 +117,7 @@
 			UPDATE K
 			SET K.NominalOD = G.AttributeValue
 			FROM cteOD G INNER JOIN Setup.ItemAttributes K ON G.item_number = K.ItemNumber
-			WHERE RowNumber = 1 AND DATEDIFF(DAY,DateRevised,GETDATE()) = 0
+			WHERE RowNumber = 1 AND DATEDIFF(DAY,DateRevised,GETDATE()) = 0 AND ISNUMERIC(G.AttributeValue) = 1
 		COMMIT TRAN
 	END TRY
 	BEGIN CATCH
diff --git a/Tables/dbo._report_3b_specialty_order_detail.sql b/Tables/dbo._report_3b_specialty_order_detail.sql
index d1bfe18..4ab645e 100644
--- a/Tables/dbo._report_3b_specialty_order_detail.sql
+++ b/Tables/dbo._report_3b_specialty_order_detail.sql
@@ -12,11 +12,15 @@
 [promise_date] [datetime] NULL,
 [schedule_ship_date] [datetime] NULL,
 [schedule_approved] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_credit_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_mfg_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_export_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_shipping_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [scheduled_setup_start] [datetime] NULL,
 [machine_name] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [component_item] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [ProductionStatus] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [material_earliest_start_date] [datetime] NULL,
 [last_update_date] [datetime] NOT NULL
-) ON [PRIMARY]
+) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 GO
diff --git a/Tables/dbo._report_3c_acs_order_status_review.sql b/Tables/dbo._report_3c_acs_order_status_review.sql
index 9be2de7..b5d00ec 100644
--- a/Tables/dbo._report_3c_acs_order_status_review.sql
+++ b/Tables/dbo._report_3c_acs_order_status_review.sql
@@ -9,11 +9,15 @@
 [promise_date] [datetime] NULL,
 [schedule_ship_date] [datetime] NULL,
 [schedule_approved] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_credit_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_mfg_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_export_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
+[has_shipping_hold] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [scheduled_setup_start] [datetime] NULL,
 [machine_name] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [component_item] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [ProductionStatus] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [material_earliest_start_date] [datetime] NULL,
 [last_update_date] [datetime] NOT NULL
-) ON [PRIMARY]
+) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 GO
diff --git a/Tables/dbo._report_9a_bobbin_usage_release.sql b/Tables/dbo._report_9a_bobbin_usage_release.sql
index 7aadf6d..0ea6356 100644
--- a/Tables/dbo._report_9a_bobbin_usage_release.sql
+++ b/Tables/dbo._report_9a_bobbin_usage_release.sql
@@ -1,12 +1,9 @@
 CREATE TABLE [dbo].[_report_9a_bobbin_usage_release]
 (
-[Job] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
-[Op] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
-[OrderNumber] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [ProductName] [varchar] (max) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 [UsageDate] [datetime] NULL,
 [BobbinCount] [int] NULL,
-[BobbinStageUsageDurationDays] [float] NULL,
+[BobbinStageUsageDurationDays] [float] NOT NULL,
 [last_update_date] [datetime] NOT NULL
-) ON [PRIMARY]
+) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 GO
diff --git a/Tables/dbo._report_9a_bobbin_usage_running_total.sql b/Tables/dbo._report_9a_bobbin_usage_running_total.sql
deleted file mode 100644
index b49a86a..0000000
--- a/Tables/dbo._report_9a_bobbin_usage_running_total.sql
+++ /dev/null
@@ -1,9 +0,0 @@
-CREATE TABLE [dbo].[_report_9a_bobbin_usage_running_total]
-(
-[UsageDate] [datetime] NULL,
-[BobbinCount] [int] NULL,
-[RunningBobbinCount] [int] NULL,
-[AverageStageReelUsageDays] [float] NULL,
-[last_update_date] [datetime] NOT NULL
-) ON [PRIMARY]
-GO
diff --git a/Views/Scheduling.vAlertMfgHold.sql b/Views/Scheduling.vAlertMfgHold.sql
index 6fea3be..7027dcf 100644
--- a/Views/Scheduling.vAlertMfgHold.sql
+++ b/Views/Scheduling.vAlertMfgHold.sql
@@ -2,6 +2,8 @@
 GO
 SET ANSI_NULLS ON
 GO
+
+
 /*
 Author:		Bryan Eddy
 Date:		4/5/2018
@@ -11,8 +13,8 @@
 */
 
 CREATE VIEW [Scheduling].[vAlertMfgHold]
-as
+AS
 SELECT DISTINCT order_number, conc_order_number, promise_date, need_by_date, has_mfg_hold, assembly_item, customer_name, scheduler, pri_uom_order_qty
 FROM dbo.Oracle_Orders
-WHERE has_mfg_hold = 'Y' AND DATEDIFF(DD,promise_date,GETDATE()) <= 21
+WHERE has_mfg_hold = 'Y' AND DATEDIFF(DD,GETDATE(),promise_date) <= 21 AND active_flag <> 'N'
 GO
diff --git a/Views/Scheduling.vDjStatusConflict.sql b/Views/Scheduling.vDjStatusConflict.sql
index 97d930f..2e12271 100644
--- a/Views/Scheduling.vDjStatusConflict.sql
+++ b/Views/Scheduling.vDjStatusConflict.sql
@@ -3,12 +3,13 @@
 SET ANSI_NULLS ON
 GO
 
+
 /*
 Author:		Bryan Eddy
 Date:		4/3/2018
 Desc:		Display jobs with status conflicts.  Created to report issues with jobs having process status conflicts.  Example: Two simultaneous operations running for a single job
-Version:	1
-Update:		N/A
+Version:	2
+Update:		Added additional fields to display in the email alert
 */
 CREATE VIEW [Scheduling].[vDjStatusConflict]
 AS
@@ -19,7 +20,7 @@
 next_op
 AS
 (
-SELECT        r.wip_entity_name, r.operation_seq_num as c_op, MIN(r2.operation_seq_num) AS n_op
+SELECT        r.wip_entity_name, r.operation_seq_num AS c_op, MIN(r2.operation_seq_num) AS n_op
                           FROM            dbo.Oracle_DJ_Routes AS r LEFT OUTER JOIN
                                                     dbo.Oracle_DJ_Routes AS r2 ON r.wip_entity_name = r2.wip_entity_name AND r.operation_seq_num < r2.operation_seq_num
                           GROUP BY r.wip_entity_name, r.operation_seq_num
@@ -28,54 +29,30 @@
 op_status
 AS
 (
-SELECT        n.wip_entity_name, n.c_op, cr.true_operation_seq_num as c_true_op, cr.dj_status as c_status, cp.setup_start_time as c_setup_start_time, cp.run_start_time as c_run_start, cr.op_quantity_completed as c_qty_complete, cr.start_quantity as c_qty_start, n.n_op, nr.true_operation_seq_num as n_true_op, nr.op_quantity_completed as n_qty_completed,
+SELECT        n.wip_entity_name, n.c_op, cr.true_operation_seq_num AS c_true_op, cr.dj_status AS c_status, cp.setup_start_time AS c_setup_start_time, cp.run_start_time AS c_run_start, cr.op_quantity_completed AS c_qty_complete, cr.start_quantity AS c_qty_start, n.n_op, nr.true_operation_seq_num AS n_true_op, nr.op_quantity_completed AS n_qty_completed,
 				CASE WHEN (cr.op_quantity_completed >= cr.start_quantity) OR (nr.op_quantity_completed > 0) OR (cr.dj_status IN ('Complete','Closed')) THEN 'finished' 
 				WHEN (cr.op_quantity_completed > 0) OR (cp.run_start_time IS NOT NULL) THEN 'running' 
-				WHEN (cp.setup_start_time IS NOT NULL) THEN 'settingup' ELSE 'ready_wait' END AS p_status
+				WHEN (cp.setup_start_time IS NOT NULL) THEN 'settingup' ELSE 'ready_wait' END AS p_status, cr.operation_code
+				, cr.department_code, cp.run_end_time, cr.op_quantity_completed, cr.start_quantity
 FROM            next_op AS n INNER JOIN	
-				Oracle_DJ_Routes as cr ON n.wip_entity_name = cr.wip_entity_name and n.c_op = cr.operation_seq_num LEFT OUTER JOIN
-				Oracle_DJ_Processing_Times as cp ON n.wip_entity_name = cp.wip_entity_name and n.c_op = cp.op_sequence LEFT OUTER JOIN
-				Oracle_DJ_Routes as nr ON n.wip_entity_name = nr.wip_entity_name and n.n_op = nr.operation_seq_num
+				Oracle_DJ_Routes AS cr ON n.wip_entity_name = cr.wip_entity_name AND n.c_op = cr.operation_seq_num LEFT OUTER JOIN
+				Oracle_DJ_Processing_Times AS cp ON n.wip_entity_name = cp.wip_entity_name AND n.c_op = cp.op_sequence LEFT OUTER JOIN
+				Oracle_DJ_Routes AS nr ON n.wip_entity_name = nr.wip_entity_name AND n.n_op = nr.operation_seq_num
 ),
 
 running_counts
 AS
 (
- SELECT wip_entity_name, count(p_status) as [count] from op_status
+ SELECT wip_entity_name, COUNT(p_status) AS [count] FROM op_status
  WHERE p_status = 'running'
  GROUP BY wip_entity_name
 )
 
-	SELECT o.wip_entity_name, o.c_op AS operation_seq_num, o.n_true_op AS true_operation_seq_num
+	SELECT o.wip_entity_name, o.c_op AS operation_seq_num, o.n_true_op AS true_operation_seq_num, o.c_status, o.p_status, o.operation_code, o.department_code
+	, o.c_setup_start_time, o.c_run_start, o.run_end_time, o.op_quantity_completed, o.start_quantity
 	FROM op_status o INNER JOIN
 	running_counts r ON o.wip_entity_name = r.wip_entity_name
-	where [count] > 1
+	WHERE [count] > 1
 
---SELECT        a.wip_entity_name, a.operation_seq_num, r4.true_operation_seq_num
---FROM            (SELECT        r.wip_entity_name, r.operation_seq_num, MIN(r2.operation_seq_num) AS next_op_seq_num
---                          FROM            dbo.Oracle_DJ_Routes AS r LEFT OUTER JOIN
---                                                    dbo.Oracle_DJ_Routes AS r2 ON r.wip_entity_name = r2.wip_entity_name AND r.operation_seq_num < r2.operation_seq_num
---                          GROUP BY r.wip_entity_name, r.operation_seq_num) AS a INNER JOIN
---                         dbo.Oracle_DJ_Routes AS r3 ON a.wip_entity_name = r3.wip_entity_name AND a.operation_seq_num = r3.operation_seq_num INNER JOIN
---                         dbo.Oracle_DJ_Processing_Times AS p3 ON r3.wip_entity_name = p3.wip_entity_name AND r3.operation_seq_num = p3.op_sequence INNER JOIN
---                         dbo.Oracle_DJ_Routes AS r4 ON a.wip_entity_name = r4.wip_entity_name AND a.operation_seq_num = r4.operation_seq_num
---WHERE        (r3.dj_status NOT IN ('Complete', 'Closed')) AND (r3.op_quantity_completed < r3.start_quantity) AND (r3.op_quantity_completed > 0) AND (r4.op_quantity_completed = 0)
---GO
 
---WITH cteConflict
---AS(
---	SELECT K.assembly_item,I.wip_entity_name, K.job_type, K.dj_status, I.run_start_time, I.run_end_time, I.success_flag, I.reject_flag, K.true_operation_code, K.operation_code
---	,K.operation_seq_num, COALESCE(K.quantity_completed,0) AS quantity_completed, K.start_quantity, K.net_quantity
---	,LEAD(I.run_start_time,1) OVER (PARTITION BY I.wip_entity_name ORDER BY K.operation_seq_num) NextProcessRunStartTime
---	,LEAD(K.quantity_completed,1,0) OVER (PARTITION BY I.wip_entity_name ORDER BY K.operation_seq_num) NextProcessQuantityCompleted
---	,LEAD(true_operation_code,1,true_operation_code) OVER (PARTITION BY I.wip_entity_name ORDER BY K.operation_seq_num) NextTrueOperationCode
---	FROM Oracle_DJ_Routes K INNER JOIN dbo.Oracle_DJ_Processing_Times I ON I.wip_entity_name = K.wip_entity_name AND I.op_sequence = K.operation_seq_num
---	WHERE K.dj_status NOT IN ('COMPLETE', 'CLOSED')
---)
---SELECT * 
---FROM cteConflict i
---WHERE ((i.run_end_time IS NULL AND NextProcessRunStartTime IS NOT NULL AND NextProcessQuantityCompleted <=0) 
---OR (i.run_start_time IS NULL AND i.quantity_completed >0 AND i.NextProcessQuantityCompleted = 0)) --AND i.true_operation_code <> i.NextTrueOperationCode
-
---ORDER BY I.wip_entity_name, I.operation_seq_num
 GO
diff --git a/Views/Scheduling.vMissingMaterialDemand.sql b/Views/Scheduling.vMissingMaterialDemand.sql
index 2db86c5..8c22e98 100644
--- a/Views/Scheduling.vMissingMaterialDemand.sql
+++ b/Views/Scheduling.vMissingMaterialDemand.sql
@@ -3,6 +3,7 @@
 SET ANSI_NULLS ON
 GO
 
+
 /*
 Author:		Bryan Eddy
 Desc:		View to show items with materials not assigned to an operation passing to the APS system
@@ -18,12 +19,11 @@
 WITH cteRoutes
 AS(
 	SELECT *
-	FROM Setup.vRoutesUnion
+	FROM dbo.Oracle_Routes
 	WHERE pass_to_aps <> 'N'
 )
-SELECT B.item_number,B.comp_item, CAST(B.item_seq AS INT) item_seq,CAST(B.opseq AS INT) AS Bom_Op_Seq, R.operation_seq_num AS Route_Op_Seq, I.inventory_item_status_code, B.wip_entity_name
-FROM Setup.vBomUnion B LEFT JOIN cteRoutes R ON R.item_number = B.item_number AND B.opseq = R.operation_seq_num AND B.alternate_bom_designator = R.alternate_routing_designator
-	AND R.wip_entity_name = B.wip_entity_name
+SELECT B.item_number,B.comp_item, CAST(B.item_seq AS INT) item_seq,CAST(B.opseq AS INT) AS Bom_Op_Seq, R.operation_seq_num AS Route_Op_Seq, I.inventory_item_status_code
+FROM dbo.Oracle_BOMs B LEFT JOIN cteRoutes R ON R.item_number = B.item_number AND B.opseq = R.operation_seq_num AND B.alternate_bom_designator = R.alternate_routing_designator
 	INNER JOIN dbo.Oracle_Items I ON B.item_number = I.item_number
 WHERE R.item_number IS NULL AND B.comp_qty_per <> 0 AND I.inventory_item_status_code NOT IN ('obsolete','cab review')
 --ORDER BY I.inventory_item_status_code
diff --git a/Views/Scheduling.vMissingMaterialDemandDj.sql b/Views/Scheduling.vMissingMaterialDemandDj.sql
new file mode 100644
index 0000000..02a136d
--- /dev/null
+++ b/Views/Scheduling.vMissingMaterialDemandDj.sql
@@ -0,0 +1,30 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+
+/*
+Author:		Bryan Eddy
+Desc:		View to show items with materials not assigned to an operation passing to the APS system
+Date:		5/30/2018
+Version:	1
+Update:		n/a
+*/
+
+CREATE VIEW [Scheduling].[vMissingMaterialDemandDj]
+AS
+
+
+WITH cteRoutes
+AS(
+	SELECT *
+	FROM dbo.Oracle_DJ_Routes
+	WHERE send_to_aps <> 'N'
+)
+SELECT b.assembly_item AS item_number,b.component_item,CAST(b.operation_seq_num AS INT) AS Bom_Op_Seq, R.operation_seq_num AS Route_Op_Seq, I.inventory_item_status_code, B.wip_entity_name
+FROM dbo.Oracle_DJ_BOM b LEFT JOIN cteRoutes R ON R.assembly_item = B.assembly_item AND B.operation_seq_num = R.operation_seq_num AND R.wip_entity_name = b.wip_entity_name
+	INNER JOIN dbo.Oracle_Items I ON B.assembly_item = I.item_number
+WHERE R.assembly_item IS NULL AND b.required_quantity <> 0 AND I.inventory_item_status_code NOT IN ('obsolete','cab review')
+--ORDER BY I.inventory_item_status_code
+GO
diff --git a/Views/Scheduling.vOpenPOs.sql b/Views/Scheduling.vOpenPOs.sql
index 8482d2a..2723519 100644
--- a/Views/Scheduling.vOpenPOs.sql
+++ b/Views/Scheduling.vOpenPOs.sql
@@ -3,6 +3,7 @@
 SET ANSI_NULLS ON
 GO
 
+
 /****** Script for SelectTopNRows command from SSMS  ******/
 /*
 Author:		Bryan Eddy
@@ -14,7 +15,7 @@
 CREATE VIEW [Scheduling].[vOpenPOs]
 AS
 SELECT item_number, open_po_qty_primary, vendor_name, po_number,promised_date, need_by_date, primary_uom_code,category_name
-  FROM [PlanetTogether_Data_Prod].[dbo].[Oracle_POs]
+  FROM [dbo].[Oracle_POs]
   WHERE open_po_qty_primary > 0
 
 GO
diff --git a/Views/Scheduling.vOrdersWithMaterialsNotOrderedInNineMonths.sql b/Views/Scheduling.vOrdersWithMaterialsNotOrderedInNineMonths.sql
deleted file mode 100644
index 5670fd8..0000000
--- a/Views/Scheduling.vOrdersWithMaterialsNotOrderedInNineMonths.sql
+++ /dev/null
@@ -1,55 +0,0 @@
-SET QUOTED_IDENTIFIER ON
-GO
-SET ANSI_NULLS ON
-GO
-
-
-
-
-
-
-/*
-Author:		Bryan Eddy
-Date:		4/4/2018
-Desc:		View to show orders having materials that haven't been ordered in 9 months.
-Version:	1
-Update:		n/a
-*/
-
-
-CREATE VIEW [Scheduling].[vOrdersWithMaterialsNotOrderedInNineMonths]
-AS
-/************ Old query.  Keeping until data is confirmed*********************/
-
-WITH cteBomExplode
-AS (
-	SELECT  E.conc_order_number, E.assembly_item,E.order_quantity, i.FinishedGood, i.comp_item,I.ExtendedQuantityPer
-	,MAX(E.order_quantity) OVER (PARTITION BY I.comp_item) AS MaxOrderQuantityPerMaterial, I.primary_uom_code
-	FROM (SELECT DISTINCT conc_order_number, assembly_item, order_quantity FROM dbo.Oracle_Orders WHERE schedule_approved = 'n') E CROSS APPLY dbo.fn_ExplodeBOM(E.assembly_item) I
-	--GROUP BY E.conc_order_number, E.assembly_item,E.order_quantity, i.FinishedGood, i.comp_item,
-
-	)
-,cteBomAgg
-AS(
-	SELECT   G.conc_order_number, G.assembly_item, G.FinishedGood,G.MaxOrderQuantityPerMaterial,G.comp_item
-	, SUM(G.ExtendedQuantityPer* G.order_quantity) OVER (PARTITION BY G.comp_item) AS MaterialDemandTotal
-	, G.primary_uom_code, G.order_quantity
-	FROM cteBomExplode G
-
-),
-cteOnHnad
-AS(
-SELECT DISTINCT item_number, SUM(onhand_qty) OVER (PARTITION BY item_number) AS TotalQuantityOnHand
-FROM dbo.Oracle_Onhand
-WHERE subinventory_code <> 'FLOORSTK'
-)
-SELECT DISTINCT  k.conc_order_number, K.FinishedGood,K.order_quantity,K.comp_item AS Material, j.primary_uom_code, inventory_item_status_code, po_date
-, po_receipt_date, J.make_buy, K.MaxOrderQuantityPerMaterial, K.MaterialDemandTotal
-,J.item_description MaterialDescription, O.TotalQuantityOnHand, O.TotalQuantityOnHand - K.MaterialDemandTotal MaterialDemandDelta, 1 - (O.TotalQuantityOnHand - K.MaterialDemandTotal)/O.TotalQuantityOnHand DemandPercentOfOnHand
-FROM dbo.Oracle_Items J INNER JOIN cteBomAgg K ON J.item_number = K.comp_item 
-INNER JOIN cteOnHnad O ON O.item_number = J.item_number
-WHERE (DATEDIFF(MM,po_date,GETDATE()) >= 9 OR DATEDIFF(MM,po_receipt_date,GETDATE()) >=9)
-	AND J.make_buy = 'buy' --D K.MaterialDemand > O.TotalQuantityOnHand
---ORDER BY Material, K.order_quantity
-
-GO
diff --git a/Views/Scheduling.vSpecialOrders.sql b/Views/Scheduling.vSpecialOrders.sql
new file mode 100644
index 0000000..6f0838e
--- /dev/null
+++ b/Views/Scheduling.vSpecialOrders.sql
@@ -0,0 +1,71 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+
+/*
+Author:		Bryan Eddy
+Desc:		view of special orders
+Date:		6/7/2018
+Version:	1
+Update:		n/a
+*/
+
+CREATE VIEW [Scheduling].[vSpecialOrders]
+AS
+WITH cteSpecialOrders
+AS(
+SELECT e.return_osp,
+       e.ncmir_notes,
+       e.print_notes,
+       e.conc_order_number,
+       e.customer_name,
+       e.job,
+       e.part_number,
+       e.so_qty,
+       e.request_date,
+       e.promise_date,
+       e.schedule_ship_date,
+       e.schedule_approved,
+       e.has_credit_hold,
+       e.has_mfg_hold,
+       e.has_export_hold,
+       e.has_shipping_hold,
+       e.scheduled_setup_start,
+       e.machine_name,
+       e.component_item,
+       e.ProductionStatus,
+       e.material_earliest_start_date,
+       e.last_update_date,
+	   CASE WHEN e.schedule_approved = 'N' THEN 1 
+			WHEN E.schedule_approved = 'Y' THEN 2
+			ELSE	3 END ScheduleApprovedOrder
+FROM _report_3b_specialty_order_detail e
+)
+SELECT E.return_osp,
+       E.ncmir_notes,
+       E.print_notes,
+       E.conc_order_number,
+       E.customer_name,
+       E.job,
+       E.part_number,
+       E.so_qty,
+       E.request_date,
+       E.promise_date,
+       E.schedule_ship_date,
+       E.schedule_approved,
+       E.has_credit_hold,
+       E.has_mfg_hold,
+       E.has_export_hold,
+       E.has_shipping_hold,
+       E.scheduled_setup_start,
+       E.machine_name,
+       E.component_item,
+       E.ProductionStatus,
+       E.material_earliest_start_date,
+       E.last_update_date,
+       E.ScheduleApprovedOrder,
+		ROW_NUMBER() OVER (PARTITION BY e.conc_order_number ORDER BY ScheduleApprovedOrder, promise_date, scheduled_setup_start) OrderNumberStart
+FROM cteSpecialOrders E
+GO
diff --git a/Views/Scheduling.vStaleMaterials.sql b/Views/Scheduling.vStaleMaterials.sql
new file mode 100644
index 0000000..b0d2f09
--- /dev/null
+++ b/Views/Scheduling.vStaleMaterials.sql
@@ -0,0 +1,51 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+
+/*
+Author:		Bryan Eddy
+Date:		4/4/2018
+Desc:		View to show orders having materials that haven't been ordered in 9 months.
+Version:	3
+Update:		Input logic canged to capture po_reciept_date is null
+*/
+
+
+CREATE VIEW [Scheduling].[vStaleMaterials]
+AS
+/************ Old query.  Keeping until data is confirmed*********************/
+
+WITH cteBomExplode
+AS (
+	SELECT  E.conc_order_number, E.assembly_item,E.order_quantity, i.FinishedGood, i.comp_item,I.ExtendedQuantityPer
+	,MAX(E.order_quantity) OVER (PARTITION BY I.comp_item) AS MaxOrderQuantityPerMaterial, I.primary_uom_code
+	FROM (SELECT DISTINCT conc_order_number, assembly_item, order_quantity FROM dbo.Oracle_Orders WHERE schedule_approved = 'n' AND order_type NOT LIKE '%rma%' AND order_quantity > 0
+	) E CROSS APPLY dbo.fn_ExplodeBOM(E.assembly_item) I
+	INNER JOIN dbo.Oracle_Items P ON P.item_number = I.item_number
+	WHERE P.make_buy = 'make'
+	)
+,cteBomAgg
+AS(
+	SELECT   G.conc_order_number, G.assembly_item, G.FinishedGood,G.MaxOrderQuantityPerMaterial,G.comp_item
+	, SUM(G.ExtendedQuantityPer* G.order_quantity) OVER (PARTITION BY G.comp_item) AS MaterialDemandTotal
+	, G.primary_uom_code, G.order_quantity
+	FROM cteBomExplode G
+
+),
+cteOnHnad
+AS(
+SELECT DISTINCT item_number, SUM(onhand_qty) OVER (PARTITION BY item_number) AS TotalQuantityOnHand
+FROM dbo.Oracle_Onhand
+WHERE subinventory_code <> 'FLOORSTK'
+)
+SELECT DISTINCT  k.conc_order_number, K.FinishedGood,K.order_quantity,K.comp_item AS Material, j.primary_uom_code, inventory_item_status_code, po_date
+, po_receipt_date, J.make_buy, K.MaxOrderQuantityPerMaterial, K.MaterialDemandTotal, J.buyer
+,J.item_description MaterialDescription, O.TotalQuantityOnHand, O.TotalQuantityOnHand - K.MaterialDemandTotal MaterialDemandDelta, 1 - (O.TotalQuantityOnHand - K.MaterialDemandTotal)/O.TotalQuantityOnHand DemandPercentOfOnHand
+FROM dbo.Oracle_Items J INNER JOIN cteBomAgg K ON J.item_number = K.comp_item 
+INNER JOIN cteOnHnad O ON O.item_number = J.item_number
+WHERE (DATEDIFF(MM,po_date,GETDATE()) >= 9 OR DATEDIFF(MM,po_receipt_date,GETDATE()) >=9 OR J.po_receipt_date IS NULL )
+	AND J.make_buy = 'buy'
+
+GO
diff --git a/Views/Scheduling.vStaleMaterialsFlat.sql b/Views/Scheduling.vStaleMaterialsFlat.sql
new file mode 100644
index 0000000..926ac26
--- /dev/null
+++ b/Views/Scheduling.vStaleMaterialsFlat.sql
@@ -0,0 +1,27 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+/*
+Author:		Bryan Eddy
+Date:		5/31/2018
+Desc:		Flattened version of the stale materials view
+Version:	1
+Update:		n/a
+*/
+
+CREATE VIEW [Scheduling].[vStaleMaterialsFlat]
+as
+SELECT DISTINCT FinishedGood, d.Materials, E.Orders
+    FROM [Scheduling].[vStaleMaterials]  p1
+   CROSS APPLY ( SELECT DISTINCT  Material + ',' 
+                     FROM [Scheduling].[vStaleMaterials] p2
+                     WHERE p2.FinishedGood = p1.FinishedGood 
+                     FOR XML PATH('') )  D ( Materials )
+	CROSS APPLY ( SELECT DISTINCT p3.conc_order_number + ',' 
+                     FROM [Scheduling].[vStaleMaterials] p3
+                     WHERE p3.FinishedGood = p1.FinishedGood
+                     FOR XML PATH('') )  E ( Orders )
+
+GO
diff --git a/Views/Scheduling.vStaleMaterialsFlatByBuyer.sql b/Views/Scheduling.vStaleMaterialsFlatByBuyer.sql
new file mode 100644
index 0000000..32e566a
--- /dev/null
+++ b/Views/Scheduling.vStaleMaterialsFlatByBuyer.sql
@@ -0,0 +1,29 @@
+SET QUOTED_IDENTIFIER ON
+GO
+SET ANSI_NULLS ON
+GO
+
+
+
+/*
+Author:		Bryan Eddy
+Date:		6/7/2018
+Desc:		Flattened version of the stale materials view with information by buyer
+Version:	1
+Update:		n/a
+*/
+
+CREATE VIEW [Scheduling].[vStaleMaterialsFlatByBuyer]
+AS
+SELECT DISTINCT buyer,Material, D.FinishedGood,E.Orders
+    FROM [Scheduling].[vStaleMaterials]  p1
+   CROSS APPLY ( SELECT DISTINCT  p2.FinishedGood + ',' 
+                     FROM [Scheduling].[vStaleMaterials] p2
+                     WHERE p2.Material = p1.Material
+                     FOR XML PATH('') )  D ( FinishedGood )
+	CROSS APPLY ( SELECT DISTINCT p3.conc_order_number + ',' 
+                     FROM [Scheduling].[vStaleMaterials] p3
+                     WHERE p3.Material= p1.Material
+                     FOR XML PATH('') )  E ( Orders )
+
+GO
diff --git a/Views/Setup.vExcludedOrdersDetail.sql b/Views/Setup.vExcludedOrdersDetail.sql
index fc32ec5..d1e5b50 100644
--- a/Views/Setup.vExcludedOrdersDetail.sql
+++ b/Views/Setup.vExcludedOrdersDetail.sql
@@ -2,27 +2,17 @@
 GO
 SET ANSI_NULLS ON
 GO
-
-
-
-
-
-
-
-
-
 /*
 Author:			Bryan Eddy
 Date:			3/16/18
 Description:	Exclusion list to show just Dj's and sales orders that are affected from missing setups
-Version:		1
-Update:			Initial creation
-
+Version:		2
+Update:			added queries to identify jobs with missing material demand
 
 
 */
 
-CREATE VIEW	[Setup].[vExcludedOrdersDetail]
+CREATE VIEW [Setup].[vExcludedOrdersDetail]
 AS
 	
 
@@ -31,6 +21,13 @@
 	UNION 
 	SELECT   i.conc_order_number, Item AS ItemNumber, i.wip_entity_name, i.Setup, i.operation_seq_num
 	FROM Setup.vMissingSetupsDj i
+	UNION 
+	SELECT DISTINCT i.conc_order_number,E.AssemblyItemNumber, P.wip_entity_name,NULL,p.Bom_Op_Seq
+	FROM Scheduling.vMissingMaterialDemandDj P CROSS APPLY Setup.fn_WhereUsedStdAndDJ(P.item_number) E	INNER JOIN Scheduling.vOracleOrders i ON i.child_dj_number = p.item_number
+	UNION
+	SELECT DISTINCT i.conc_order_number, p.item_number , p.wip_entity_name, NULL, p.Bom_Op_Seq
+	FROM Scheduling.vMissingMaterialDemandDj p INNER JOIN Scheduling.vOracleOrders i ON i.parent_dj_number = p.item_number
+
 
 
 
